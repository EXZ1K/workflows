name: Bybit API Proxy

on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  proxy-request:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install axios
      run: npm install axios
        
    - name: Process Bybit API request
      id: process-request
      run: |
        node -e "
        const axios = require('axios');
        
        // Получаем данные из Issue
        const issueBody = '${{ github.event.issue.body }}';
        console.log('Issue body:', issueBody);
        
        // Простой тест - делаем запрос к публичному endpoint
        const testUrl = 'https://api.bybit.com/v5/public/time';
        
        console.log('Testing Bybit API:', testUrl);
        
        axios.get(testUrl, {
          timeout: 30000,
          headers: {
            'User-Agent': 'GitHub-Actions-Proxy/1.0'
          }
        })
        .then(response => {
          console.log('✅ Success! Status:', response.status);
          console.log('Data:', JSON.stringify(response.data, null, 2));
          
          const comment = \`## ✅ Bybit API Test Success!
          
          **Status:** \${response.status}
          **Data:** \`\`\`json
          \${JSON.stringify(response.data, null, 2)}
          \`\`\`
          
          **Test URL:** \${testUrl}
          **Timestamp:** \${new Date().toISOString()}
          \`;
          
          console.log('::set-output name=comment::' + comment.replace(/\n/g, '%0A'));
          console.log('::set-output name=success::true');
        })
        .catch(error => {
          console.error('❌ Error:', error.message);
          
          const errorComment = \`## ❌ Bybit API Test Failed
          
          **Error:** \${error.message}
          **Test URL:** \${testUrl}
          **Timestamp:** \${new Date().toISOString()}
          
          **Details:** \${error.response ? \`Status: \${error.response.status}, Data: \${JSON.stringify(error.response.data)}\` : 'No response data'}
          \`;
          
          console.log('::set-output name=comment::' + errorComment.replace(/\n/g, '%0A'));
          console.log('::set-output name=success::false');
        });
        "
        
    - name: Comment on issue
      if: github.event_name == 'issues'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = '${{ steps.process-request.outputs.comment }}';
          const issue_number = context.issue.number;
          
          await github.rest.issues.createComment({
            issue_number: issue_number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Show result
      run: |
        echo "Success: ${{ steps.process-request.outputs.success }}"
        echo "Comment: ${{ steps.process-request.outputs.comment }}"
